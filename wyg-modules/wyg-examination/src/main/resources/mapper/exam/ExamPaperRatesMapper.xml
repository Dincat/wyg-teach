<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wyg.exam.mapper.ExamPaperRatesMapper">

    <resultMap type="com.wyg.exam.domain.ExamPaperRates" id="ExamPaperRatesResult">
            <result property="id"    column="id"    />
            <result property="paperId"    column="paper_id"    />
            <result property="userId"    column="user_id"    />
            <result property="rating"    column="rating"    />
            <result property="comment"    column="comment"    />
            <result property="createBy"    column="create_by"    />
            <result property="createTime"    column="create_time"    />
            <result property="updateBy"    column="update_by"    />
            <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectExamPaperRatesVo">
        select id, paper_id, user_id, rating, comment, create_by, create_time, update_by, update_time from exam_paper_rates
    </sql>

    <select id="selectExamPaperRatesList" parameterType="com.wyg.exam.domain.ExamPaperRates" resultMap="ExamPaperRatesResult">
        <include refid="selectExamPaperRatesVo"/>
        <where>
                        <if test="paperId != null "> and paper_id = #{paperId}</if>
                        <if test="userId != null "> and user_id = #{userId}</if>
                        <if test="rating != null "> and rating = #{rating}</if>
                        <if test="comment != null  and comment != ''"> and comment = #{comment}</if>
        </where>
    </select>

    <select id="selectExamPaperRatesById" parameterType="Long" resultMap="ExamPaperRatesResult">
            <include refid="selectExamPaperRatesVo"/>
            where id = #{id}
    </select>

    <insert id="insertExamPaperRates" parameterType="com.wyg.exam.domain.ExamPaperRates" useGeneratedKeys="true" keyProperty="id">
        insert into exam_paper_rates
        <trim prefix="(" suffix=")" suffixOverrides=",">
                    <if test="paperId != null">paper_id,</if>
                    <if test="userId != null">user_id,</if>
                    <if test="rating != null">rating,</if>
                    <if test="comment != null">comment,</if>
                    <if test="createBy != null">create_by,</if>
                    <if test="createTime != null">create_time,</if>
                    <if test="updateBy != null">update_by,</if>
                    <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                    <if test="paperId != null">#{paperId},</if>
                    <if test="userId != null">#{userId},</if>
                    <if test="rating != null">#{rating},</if>
                    <if test="comment != null">#{comment},</if>
                    <if test="createBy != null">#{createBy},</if>
                    <if test="createTime != null">#{createTime},</if>
                    <if test="updateBy != null">#{updateBy},</if>
                    <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateExamPaperRates" parameterType="com.wyg.exam.domain.ExamPaperRates">
        update exam_paper_rates
        <trim prefix="SET" suffixOverrides=",">
                    <if test="paperId != null">paper_id = #{paperId},</if>
                    <if test="userId != null">user_id = #{userId},</if>
                    <if test="rating != null">rating = #{rating},</if>
                    <if test="comment != null">comment = #{comment},</if>
                    <if test="createBy != null">create_by = #{createBy},</if>
                    <if test="createTime != null">create_time = #{createTime},</if>
                    <if test="updateBy != null">update_by = #{updateBy},</if>
                    <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteExamPaperRatesById" parameterType="Long">
        delete from exam_paper_rates where id = #{id}
    </delete>

    <delete id="deleteExamPaperRatesByIds" parameterType="String">
        delete from exam_paper_rates where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>


    <select id="selectRatingAvgByPaperId" parameterType="Long" resultType="Double">
       select AVG(rating) from exam_paper_rates where paper_id = #{paperId} and rating is not null
    </select>

</mapper>